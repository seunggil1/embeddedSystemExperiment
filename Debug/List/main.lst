###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.6.265/W32 for ARM         16/Sep/2020  01:09:45
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\user\main.c
#    Command line      =
#        -f C:\Users\seung\AppData\Local\Temp\EW934A.tmp
#        (C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\user\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\Debug\List -o
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I "Additional include
#        directories: (one per line)\\" -I
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\libraries\CMSIS\DeviceSupport\\
#        -I
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\libraries\CMSIS\DeviceSupport\Startup\\
#        -I
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\\
#        -I
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\\
#        -I C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\user\\ -I
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\user\inc\\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\CMSIS\Core\Include\\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.4\arm\CMSIS\DSP\Include\\")
#    Locale            =  C
#    List file         =
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\Debug\List\main.lst
#    Object file       =
#        C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\Debug\Obj\main.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __size_limit    =  32768|ARM.EW.LINKER
#
###############################################################################

C:\Users\seung\Documents\GitHub\embeddedSystemExperiment\user\main.c
      1          #define RCC_BASE 0x40021000
      2          #define RCC_APB2ENR REGISTER_32(RCC_BASE + 0x18) // 4.1. 
      3           

   \                                 In section .rodata, align 4
      4          const int LED_en1 = 0x04; //2번 LED
   \                     LED_en1:
   \        0x0   0x0000'0004        DC32 4

   \                                 In section .rodata, align 4
      5          const int LED_en2 = 0x08; //3번 LED
   \                     LED_en2:
   \        0x0   0x0000'0008        DC32 8

   \                                 In section .rodata, align 4
      6          const int LED_en3 = 0x10; //4번 LED
   \                     LED_en3:
   \        0x0   0x0000'0010        DC32 16

   \                                 In section .rodata, align 4
      7          const int LED_en4 = 0x80; //7번 LED
   \                     LED_en4:
   \        0x0   0x0000'0080        DC32 128
      8           
      9          

   \                                 In section .text, align 2, keep-with-next
     10          void up(){
     11            //2번,3번 켜기
     12            //(*(volatile unsigned *) 0x40011400) |= 0x00000100; 
     13            (*(volatile unsigned *) 0x4001140C) |= LED_en1; 
   \                     up: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5  ;; 0x4001140c
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x....             LDR.N    R0,??DataTable5_1
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4302             ORRS     R2,R0,R2
   \        0xA   0x600A             STR      R2,[R1, #+0]
     14            //2번
     15            //(*(volatile unsigned *) 0x40011400) |= 0x00001000; 
     16            (*(volatile unsigned *) 0x4001141C) |= LED_en2;
   \        0xC   0x....             LDR.N    R1,??DataTable5_2  ;; 0x4001141c
   \        0xE   0x680A             LDR      R2,[R1, #+0]
   \       0x10   0x....             LDR.N    R0,??DataTable5_3
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x4302             ORRS     R2,R0,R2
   \       0x16   0x600A             STR      R2,[R1, #+0]
     17            //3번
     18          }
   \       0x18   0x4770             BX       LR               ;; return
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void down(){
     21            //4번,7번 켜기
     22            //(*(volatile unsigned *) 0x40011400) |= 0x00010000; 
     23            (*(volatile unsigned *) 0x40011410) |= LED_en3; 
   \                     down: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5_4  ;; 0x40011410
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x....             LDR.N    R0,??DataTable5_5
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4302             ORRS     R2,R0,R2
   \        0xA   0x600A             STR      R2,[R1, #+0]
     24            //4번
     25            //(*(volatile unsigned *) 0x40011400) |= 0x10000000;
     26            (*(volatile unsigned *) 0x4001140C) |= LED_en4;
   \        0xC   0x....             LDR.N    R1,??DataTable5  ;; 0x4001140c
   \        0xE   0x680A             LDR      R2,[R1, #+0]
   \       0x10   0x....             LDR.N    R0,??DataTable5_6
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x4302             ORRS     R2,R0,R2
   \       0x16   0x600A             STR      R2,[R1, #+0]
     27            //7번
     28          }
   \       0x18   0x4770             BX       LR               ;; return
     29          

   \                                 In section .text, align 2, keep-with-next
     30          void left(){
     31            //4번,7번 끄기
     32            (*(volatile unsigned *) 0x4001140C) &= ~LED_en3;
   \                     left: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5  ;; 0x4001140c
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x....             LDR.N    R0,??DataTable5_5
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4382             BICS     R2,R2,R0
   \        0xA   0x600A             STR      R2,[R1, #+0]
     33            //4번
     34            (*(volatile unsigned *) 0x4001140C) &= ~LED_en4;
   \        0xC   0x680A             LDR      R2,[R1, #+0]
   \        0xE   0x....             LDR.N    R0,??DataTable5_6
   \       0x10   0x6800             LDR      R0,[R0, #+0]
   \       0x12   0x4382             BICS     R2,R2,R0
   \       0x14   0x600A             STR      R2,[R1, #+0]
     35            //7번
     36          }
   \       0x16   0x4770             BX       LR               ;; return
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void right(){
     39            //2번,3번 끄기
     40            (*(volatile unsigned *) 0x4001140C) &= ~LED_en1;
   \                     right: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5  ;; 0x4001140c
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x....             LDR.N    R0,??DataTable5_1
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4382             BICS     R2,R2,R0
   \        0xA   0x600A             STR      R2,[R1, #+0]
     41            //2번
     42            (*(volatile unsigned *) 0x4001140C) &= ~LED_en2;
   \        0xC   0x680A             LDR      R2,[R1, #+0]
   \        0xE   0x....             LDR.N    R0,??DataTable5_3
   \       0x10   0x6800             LDR      R0,[R0, #+0]
   \       0x12   0x4382             BICS     R2,R2,R0
   \       0x14   0x600A             STR      R2,[R1, #+0]
     43            //3번
     44          }
   \       0x16   0x4770             BX       LR               ;; return
     45           

   \                                 In section .text, align 2, keep-with-next
     46          void turnoff() {
     47                     (*(volatile unsigned *) 0x40011400) &= ~0x10011100;
   \                     turnoff: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40011400
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x....             LDR.N    R0,??DataTable5_8  ;; 0xeffeeeff
   \        0x6   0x4002             ANDS     R2,R0,R2
   \        0x8   0x600A             STR      R2,[R1, #+0]
     48          }
   \        0xA   0x4770             BX       LR               ;; return
     49           

   \                                 In section .text, align 2, keep-with-next
     50          int main() {
     51            
     52                     (*(volatile unsigned *) 0x40021018) |= 0x30; 
   \                     main: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable5_9  ;; 0x40021018
   \        0x2   0x6801             LDR      R1,[R0, #+0]
   \        0x4   0xF051 0x0130      ORRS     R1,R1,#0x30
   \        0x8   0x6001             STR      R1,[R0, #+0]
     53                     //(*(volatile unsigned *) 0x40011404) = 0x44444444; //초기화
     54                     (*(volatile unsigned *) 0x40011400) = 0x10011100; //D
   \        0xA   0x....             LDR.N    R0,??DataTable5_10  ;; 0x10011100
   \        0xC   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40011400
   \        0xE   0x6008             STR      R0,[R1, #+0]
     55                     (*(volatile unsigned *) 0x40011008) = 0x888800; //C
   \       0x10   0x....             LDR.N    R0,??DataTable5_11  ;; 0x40011008
   \       0x12   0x....             LDR.N    R1,??DataTable5_12  ;; 0x888800
   \       0x14   0x6001             STR      R1,[R0, #+0]
     56                     
     57                     while (1) {
     58                                (*(volatile unsigned *) 0x4001140C) = 0x90;
   \                     ??main_0: (+1)
   \       0x16   0x2190             MOVS     R1,#+144
   \       0x18   0x....             LDR.N    R2,??DataTable5  ;; 0x4001140c
   \       0x1A   0x6011             STR      R1,[R2, #+0]
     59                                if ((*(volatile unsigned *) 0x40011008) &0x20 ==0) up();
   \       0x1C   0x6801             LDR      R1,[R0, #+0]
     60                                else if ((*(volatile unsigned *) 0x40011008) & 0x4 ==0) down();
   \       0x1E   0x6801             LDR      R1,[R0, #+0]
     61                                else if ((*(volatile unsigned *) 0x40011008) & 0x8 ==0) left();
   \       0x20   0x6801             LDR      R1,[R0, #+0]
     62                                else if ((*(volatile unsigned *) 0x40011008) & 0x10 ==0) right();
   \       0x22   0x6801             LDR      R1,[R0, #+0]
   \       0x24   0xE7F7             B.N      ??main_0
     63                     }
     64           
     65                     return 0;
                            ^
Warning[Pe111]: statement is unreachable
     66          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x4001'140C        DC32     0x4001140c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x....'....        DC32     LED_en1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x4001'141C        DC32     0x4001141c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x....'....        DC32     LED_en2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \        0x0   0x4001'1410        DC32     0x40011410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \        0x0   0x....'....        DC32     LED_en3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \        0x0   0x....'....        DC32     LED_en4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \        0x0   0x4001'1400        DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \        0x0   0xEFFE'EEFF        DC32     0xeffeeeff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \        0x0   0x4002'1018        DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \        0x0   0x1001'1100        DC32     0x10011100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \        0x0   0x4001'1008        DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \        0x0   0x0088'8800        DC32     0x888800
     67          
     68           //C2 = 아래 100
     69           //C3 = 왼쪽 1000
     70           //C4 = 오른쪽10000
     71           //C5 = 위
     72          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   down
       0   left
       0   main
       0   right
       0   turnoff
       0   up


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  LED_en1
       4  LED_en2
       4  LED_en3
       4  LED_en4
      26  down
      24  left
      38  main
      24  right
      12  turnoff
      26  up

 
  16 bytes in section .rodata
 202 bytes in section .text
 
 202 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: 1
